from __future__ import print_function
import jsonctmctree.ll, jsonctmctree.interface
from CodonGeneconv import *
import numdifftools as nd
import numpy as np


class test:
    def __init__(self):
        self.index = 0

    def sum_branch_test1(self):




        step = nd.step_generators.MaxStepGenerator()
        print(step)
        print(nd.Hessian(self.testfunction, step=step)([4]))


    def test1(self):
        print(np.max(1,2))


    def testfunction(self,x):
        print(x)
        self.index += 1
        print(self.index)
        return (x[0] ** 2 )

    def print11(self):
        step_gen = nd.step_generators.BasicMaxStepGenerator(base_step=2.0, step_ratio=2,
                                                            num_steps = 4)

        for s in step_gen():
            print(s)

        print(np.log1p(np.abs(4)).clip(min=1.0))




if __name__ == '__main__':
    self=test()
    self.test1()



